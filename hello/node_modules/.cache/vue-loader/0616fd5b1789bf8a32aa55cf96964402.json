{"remainingRequest":"/Users/yukang/Desktop/Django-2.2.5/testdj/hello/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yukang/Desktop/Django-2.2.5/testdj/hello/src/components/Label.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/yukang/Desktop/Django-2.2.5/testdj/hello/src/components/Label.vue","mtime":1573544680533},{"path":"/Users/yukang/Desktop/Django-2.2.5/testdj/hello/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yukang/Desktop/Django-2.2.5/testdj/hello/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yukang/Desktop/Django-2.2.5/testdj/hello/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yukang/Desktop/Django-2.2.5/testdj/hello/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmZ1bmN0aW9uIHRvX3R5cGUodCwgYSkgewogIGlmIChhID09IDEpCiAgICByZXR1cm4gJ3N1Y2Nlc3MnOwogIGVsc2UgewogICAgaWYgKHQgPT0gMSkKICAgICAgcmV0dXJuICdkYW5nZXInOwogICAgZWxzZQogICAgICByZXR1cm4gJ3dhcm5pbmcnOwogIH0KfQpleHBvcnQgZGVmYXVsdCB7CiAgaW5qZWN0OiBbJ3JlbG9hZCddLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgbmFtZTogJycsCiAgICAgICAgdHJhaW5lZDogMCwKICAgICAgICBhdmFpbGFibGU6IDAKICAgICAgfSwKICAgICAgZHluYW1pY1RhZ3M6IFtdLAogICAgICBpbnB1dFZpc2libGU6IGZhbHNlLAogICAgICBpbnB1dFZhbHVlOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNsb3NlKHRhZykgewogICAgICB0aGlzLmR5bmFtaWNUYWdzLnNwbGljZSh0aGlzLmR5bmFtaWNUYWdzLmluZGV4T2YodGFnKSwgMSk7CiAgICB9LAoKICAgIHNob3dJbnB1dCgpIHsKICAgICAgdGhpcy5pbnB1dFZpc2libGUgPSB0cnVlOwogICAgICB0aGlzLiRuZXh0VGljayhfID0+IHsKICAgICAgICB0aGlzLiRyZWZzLnNhdmVUYWdJbnB1dC4kcmVmcy5pbnB1dC5mb2N1cygpOwogICAgICB9KTsKICAgIH0sCgogICAgaGFuZGxlSW5wdXRDb25maXJtKCkgewogICAgICBsZXQgaW5wdXRWYWx1ZSA9IHRoaXMuaW5wdXRWYWx1ZTsKICAgICAgdGhpcy5mb3JtLm5hbWUgPSBpbnB1dFZhbHVlCiAgICAgIGlmIChpbnB1dFZhbHVlKSB7CiAgICAgICAgdGhpcy4kaHR0cAogICAgICAgICAgLnBvc3QoJy9hZGRfbGFiZWwnLCB0aGlzLmZvcm0pCiAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiAoY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSkpKQogICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgeyAvLyDor7fmsYLlpLHotKXlpITnkIYKICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpOwogICAgICAgICAgfSk7CiAgICAgICAgdGhpcy5keW5hbWljVGFncy5wdXNoKHtuYW1lOiBpbnB1dFZhbHVlLCB0eXBlOiB0b190eXBlKHRoaXMuZm9ybS50cmFpbmVkLCB0aGlzLmZvcm0uYXZhaWxhYmxlKX0pOwogICAgICB9CiAgICAgIHRoaXMuaW5wdXRWaXNpYmxlID0gZmFsc2U7CiAgICAgIHRoaXMuaW5wdXRWYWx1ZSA9ICcnOwogICAgfSwKCiAgICB1cGRhdGVfdXNlKG5hbWUsIHN0YXRlKSB7CiAgICAgIGxldCB1cGRhdGUgPSB7bmFtZTogbmFtZSwgYXZhaWxhYmxlOiBzdGF0ZX0KICAgICAgdGhpcy4kaHR0cAogICAgICAgIC5wb3N0KCcvdXBkYXRlX3VzZScsIHVwZGF0ZSkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICAgIHRoaXMucmVsb2FkKCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICB9KQogICAgfSwKICB9LAoKICBtb3VudGVkKCkgewogICAgbGV0IF9fdGhpcyA9IHRoaXMKICAgIHRoaXMuJGh0dHAKICAgIC5wb3N0KCcvc2hvd19sYWJlbHMnKQogICAgLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhWydsaXN0J10pOwogICAgICByZXNwb25zZS5kYXRhWydsaXN0J10uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIF9fdGhpcy5keW5hbWljVGFncy5wdXNoKHtuYW1lOiBpdGVtWydmaWVsZHMnXVsnbmFtZSddLAogICAgICAgICAgdHlwZTogdG9fdHlwZShpdGVtWydmaWVsZHMnXVsndHJhaW5lZCddLCBpdGVtWydmaWVsZHMnXVsnYXZhaWxhYmxlJ10pfSkKICAgICAgfSkKICAgIH0pCiAgICAuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7IC8vIOivt+axguWksei0peWkhOeQhgogICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICB9KTsKICB9Cn0K"},{"version":3,"sources":["Label.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Label.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div style=\"margin:0px auto; margin-top: 60px\">\n    <span style=\"color: #409EFF; font-size: 20px\">一级标签页</span>\n  <el-form label-position=\"top\">\n    <el-form-item></el-form-item>\n    <el-form-item label=\"标签说明\">\n      <el-tag type=\"success\">可用标签</el-tag>\n      <el-tag type=\"danger\">禁用标签</el-tag>\n      <el-tag type=\"warning\">未训练标签</el-tag>\n    </el-form-item>\n    <el-form-item label=\"标签库\">\n      <el-popover placement=\"top\" trigger=\"hover\"\n                  style=\"margin-right: 10px\"\n                  v-for=\"tag in dynamicTags\"\n      >\n        <el-form label-position=\"top\">\n          <el-form-item label=\"上传语料\"></el-form-item>\n          <el-upload\n            class=\"upload-demo\"\n            ref=\"upload\"\n            action=\"https://jsonplaceholder.typicode.com/posts/\"\n            :auto-upload=\"false\">\n            <el-button slot=\"trigger\" size=\"small\" type=\"primary\">选取文件</el-button>\n            <el-button style=\"margin-left: 10px;\" size=\"small\" type=\"success\">上传到服务器</el-button>\n            <!--<div slot=\"tip\" class=\"el-upload__tip\">只能上传jpg/png文件，且不超过500kb</div>-->\n          </el-upload>\n          <el-form-item label=\"状态设置\">\n            <el-button v-if=\"tag.type=='success'\" size=\"small\" type=\"danger\" @click=\"update_use(tag.name, 0)\">禁用</el-button>\n            <el-button v-if=\"tag.type=='danger'\" size=\"small\" type=\"success\" @click=\"update_use(tag.name, 1)\">启用</el-button>\n            <span v-if=\"tag.type=='warning'\" style=\"color: #909399\">标签不可用</span>\n          </el-form-item>\n        </el-form>\n         <el-tag\n            slot=\"reference\"\n            :key=\"tag.name\"\n            :type=\"tag.type\"\n            closable\n            :disable-transitions=\"false\"\n            @close=\"handleClose(tag)\">\n            {{tag.name}}\n          </el-tag>\n      </el-popover>\n\n    </el-form-item>\n    <el-form-item label=\"新增标签\">\n      <el-input\n      class=\"input-new-tag\"\n      v-if=\"inputVisible\"\n      v-model=\"inputValue\"\n      ref=\"saveTagInput\"\n      size=\"small\"\n      @keyup.enter.native=\"handleInputConfirm\"\n      @blur=\"handleInputConfirm\"\n    >\n    </el-input>\n    <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\" type=\"primary\">+ New Tag</el-button>\n    </el-form-item>\n\n  </el-form>\n  </div>\n\n</template>\n\n<style>\n  .el-tag + .el-tag {\n    margin-left: 10px;\n  }\n  .button-new-tag {\n    margin-left: 10px;\n    height: 32px;\n    line-height: 30px;\n    padding-top: 0;\n    padding-bottom: 0;\n  }\n  .input-new-tag {\n    width: 90px;\n    margin-left: 10px;\n    vertical-align: bottom;\n  }\n</style>\n\n<script>\n  function to_type(t, a) {\n    if (a == 1)\n      return 'success';\n    else {\n      if (t == 1)\n        return 'danger';\n      else\n        return 'warning';\n    }\n  }\n  export default {\n    inject: ['reload'],\n    data() {\n      return {\n        form: {\n          name: '',\n          trained: 0,\n          available: 0\n        },\n        dynamicTags: [],\n        inputVisible: false,\n        inputValue: ''\n      };\n    },\n    methods: {\n      handleClose(tag) {\n        this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n      },\n\n      showInput() {\n        this.inputVisible = true;\n        this.$nextTick(_ => {\n          this.$refs.saveTagInput.$refs.input.focus();\n        });\n      },\n\n      handleInputConfirm() {\n        let inputValue = this.inputValue;\n        this.form.name = inputValue\n        if (inputValue) {\n          this.$http\n            .post('/add_label', this.form)\n            .then(response => (console.log(response.data)))\n            .catch(function (error) { // 请求失败处理\n              console.log(error);\n            });\n          this.dynamicTags.push({name: inputValue, type: to_type(this.form.trained, this.form.available)});\n        }\n        this.inputVisible = false;\n        this.inputValue = '';\n      },\n\n      update_use(name, state) {\n        let update = {name: name, available: state}\n        this.$http\n          .post('/update_use', update)\n          .then(response => {\n            console.log(response.data);\n            this.reload();\n          })\n          .catch(function (error) {\n            console.log(error)\n          })\n      },\n    },\n\n    mounted() {\n      let __this = this\n      this.$http\n      .post('/show_labels')\n      .then(response => {\n        console.log(response.data['list']);\n        response.data['list'].forEach(function (item) {\n          __this.dynamicTags.push({name: item['fields']['name'],\n            type: to_type(item['fields']['trained'], item['fields']['available'])})\n        })\n      })\n      .catch(function (error) { // 请求失败处理\n        console.log(error);\n      });\n    }\n  }\n</script>\n"]}]}